# Front-End évolué

Dans cette troisième version de notre package, nous allons faire évoluer la partie interface graphique pour y ajouter différents composants graphiques.
Les choses secorse un peu: parce que s'il y a une erreur quelque part ben ça ne nous dit pas où, notre magnifique fenêtre ne s'ouvre tout simplement pas ... Quelle déception ;-(
La seule solution pour le moment que j'ai trouvé, ben j'en ai pas je galère à chaque fois (j'utilise cependant jslink pour au moins éviter les erreurs syntaxiques, et elles sont nombreuses)

ExtJs est un framework javascript développé par Sencha. Bien qu'il soit possible d'utiliser les composants graphiques développés par cette société, j'ai pu en utiliser un certains nombres, je ne peux garantir qu'ils soient tous exploitables. Il est donc préférables d'utiliser les composants spécifiques à Synology, cela est d'autant plus vrai en ce qui concerne la charte graphique.

Là le premier problème se pose: il n'y a pas, ou je ne sait pas où, d'API !!!
Donc la première chose à faire est de trouver ces informations. J'ai donc en un premier temps récupéré tous les fichiers ".js" de mon NAS. Etant donné qu'ils sont minifié, la lecture, pour le pauvre petit être humain que je suis, n'en est pas aisée. J'ai donc ensuite utilisé js-beautify pour les mettre en forme. La lecture qui s'en suivit fut d'un plaisir innavouable:-).

Après ... ben travail de fourmi ... dès que j'ai besoin d'un composant j'effecture une recherche dans tous ces fichiers. Pour me facilité la vie sur le long terme, j'essaie (pour le moment c'est pas glorieux) de rajouter les annotations qui vont bien pour utiliser JsDuck.

Voilà, maintenant que vous connaissez le cheminiment suivi, nous allons pouvoir faire évoluer notre interface. L'objectif est celui-ci:

![app-screen-shot](https://github.com/Rutorai/syno-library/blob/master/wiki/images/target-app.png)

Il va nous falloir deux fichiers JSON pour alimenté nos tableaux.

    $mkdir /opt/toolkit/source/syno-library/package/ui/data/
    $cd /opt/toolkit/source/syno-library/package/ui/data/
    $cat << __EOF__ > magazines.json
    {
        "result": [{
            "identifier": 0,
            "title": "Magasine n°1",
            "description": "Magasine n°1"
        }, {
            "identifier": 1,
            "title": "Magasine n°2",
            "description": "Magasine n°2"
        }, {
            "identifier": 2,
            "title": "Magasine n°3",
            "description": "Magasine n°3"
        }, {
            "identifier": 3,
            "title": "Magasine n°4",
            "description": "Magasine n°4"
        }, {
            "identifier": 4,
            "title": "Magasine n°5",
            "description": "Magasine n°5"
        }],
        "success": true,
        "total": 5
    }
    __EOF__
    
    $cat << __EOF__ > recipes.json
    {
        "result": [{
            "identifier": 0,
            "title": "Recette n°1",
            "description": "Recette n°1"
        }, {
            "identifier": 1,
            "title": "Recette n°2",
            "description": "Recette n°2"
        }, {
            "identifier": 2,
            "title": "Recette n°3",
            "description": "Recette n°3"
        }, {
            "identifier": 3,
            "title": "Recette n°4",
            "description": "Recette n°4"
        }, {
            "identifier": 4,
            "title": "Recette n°5",
            "description": "Recette n°5"
        }],
        "success": true,
        "total": 5
    }
    __EOF__

Nous avons également besoin d'ajouter quelques traductions:

    $cd /opt/toolkit/source/syno-library/package/ui/texts
    
    $echo "magazine=Magazine" >> ./enu/strings
    $echo "recipe=Recipe" >> ./enu/strings
    $echo "search=Search" >> ./enu/strings
    $echo "identifier=Identifier" >> ./enu/strings
    $echo "title=Title" >> ./enu/strings
    $echo "description=Description" >> ./enu/strings
    
    $echo "magazine=Magasine" >> ./fre/strings
    $echo "recipe=Recette" >> ./fre/strings
    $echo "search=Chercher" >> ./fre/strings
    $echo "identifier=Identifiant" >> ./fre/strings
    $echo "title=Titre" >> ./fre/strings
    $echo "description=Description" >> ./fre/strings
    
Pour bien faire, il faudrait enlever la clé ***"hw"*** précédemment utilisé pour le libellé "Hello World" mais cela n'est pas dérrangeant en soi. 
    
Précédemment j'avais expliqué que pour avoir le libellé traduit il fallait utiliser la fonctuoin "_TT", or vous l'aurez peut être remaqué, mais dans le fichier syno-library.js parfois j'utilise la fonction "_T" qui a une signature différente. En effet pour utiliser les fichiers de traductions présent dans DSM cette méthode est a privilégier.